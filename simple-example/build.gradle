apply plugin: 'com.android.application'
apply plugin: 'weaver'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "de.hda.simple_example"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.mvp.MvpTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDirs += sharedTestDir
        }
        androidTest {
            java.srcDirs += sharedTestDir
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'org.robolectric:robolectric:3.2.2'
    testCompile "org.robolectric:shadows-support-v4:3.2.2"
    testCompile 'org.mockito:mockito-core:2.2.0'
    testCompile 'com.google.dagger:dagger:2.10'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:25.0.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile project(':app')
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'
    annotationProcessor project(':mvp-annotation-processor')
    testAnnotationProcessor project(':mvp-annotation-processor')
    androidTestAnnotationProcessor project(':mvp-annotation-processor')
    weaver project(':mvp-annotation-processor')
    androidTestCompile project(':mvp-test')
    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'
    androidTestCompile 'com.android.support.test:runner:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile project(path: ':mvp-test-uiautomator')
}

afterEvaluate {
    android.buildTypes.all { variant ->
        android.sourceSets.test.java.srcDirs += ("$buildDir/generated/source/apt/test/$variant.name")
        android.sourceSets.androidTest.java.srcDirs += ("$buildDir/generated/source/apt/androidTest/$variant.name")
    }
}

afterEvaluate {
    android.buildTypes.all { variant ->
        def u = "compile${variant.name.capitalize()}UnitTestJavaWithJavac"
        def unitTestGenerateClassesTask = tasks.findByName(u)
        def g = "assemble${variant.name.capitalize()}"
        def generateClassesTask = tasks.findByName(g)
        if (generateClassesTask != null && unitTestGenerateClassesTask != null)
            generateClassesTask.dependsOn unitTestGenerateClassesTask
    }
}